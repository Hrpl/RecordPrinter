// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecordPrinter.Domen;

#nullable disable

namespace RecordPrinter.Domen.Migrations
{
    [DbContext(typeof(RecordPrinterDbContext))]
    partial class RecordPrinterDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecordPrinter.Domen.Models.ActRealize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MasterId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MasterId");

                    b.HasIndex("RequestId")
                        .IsUnique();

                    b.ToTable("ActRealize");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Cartridge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Resurse")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cartridges");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Master", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Birthday")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Master");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Printer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartridgeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CartridgeId");

                    b.ToTable("Printers");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrinterId")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrinterId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.ActRealize", b =>
                {
                    b.HasOne("RecordPrinter.Domen.Models.Master", "Master")
                        .WithMany("ActRealize")
                        .HasForeignKey("MasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecordPrinter.Domen.Models.Request", "Request")
                        .WithOne("ActRealize")
                        .HasForeignKey("RecordPrinter.Domen.Models.ActRealize", "RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Master");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Printer", b =>
                {
                    b.HasOne("RecordPrinter.Domen.Models.Cartridge", "Cartridge")
                        .WithMany("Printers")
                        .HasForeignKey("CartridgeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cartridge");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Request", b =>
                {
                    b.HasOne("RecordPrinter.Domen.Models.Printer", "Printer")
                        .WithMany("Requests")
                        .HasForeignKey("PrinterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Printer");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Cartridge", b =>
                {
                    b.Navigation("Printers");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Master", b =>
                {
                    b.Navigation("ActRealize");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Printer", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("RecordPrinter.Domen.Models.Request", b =>
                {
                    b.Navigation("ActRealize");
                });
#pragma warning restore 612, 618
        }
    }
}
